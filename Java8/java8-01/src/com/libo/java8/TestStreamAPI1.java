package com.libo.java8;

import java.util.ArrayList;
import java.util.Arrays;
import java.util.List;
import java.util.stream.Stream;

import org.junit.Test;

import com.libo.exer.Employee;

/**
 * 一、Stream的三个操作步骤
 * 
 * 1.创建Stream
 * 
 * 2.中间操作
 * 
 * 3.终止操作（终端操作）
 * 
 * @author bestrow
 * @date 2018年12月30日
 */
public class TestStreamAPI1 {

	// 创建Stream
	@Test
	public void test1() {
		// 1.可以通过Collection 系列集合提供的stream()[串行流]  或parallelStreamI()[并行流]
		List<String> list = new ArrayList<>();
		Stream<String> stream1 = list.stream();

		// 2.通过Arrays 中的静态方法Stream() 获取数组流
		Employee[] emps = new Employee[10];
		Stream<Employee> stream2 = Arrays.stream(emps);

		// 3.通过Stream类中的静态方法 of()
		Stream<String> stream3 = Stream.of("aa", "bb", "cc");

		// 4.创建无限流
		// 4.1迭代
		Stream<Integer> stream4 = Stream.iterate(0, (x) -> x + 2);
//		stream4.forEach(System.out::println);
		stream4.limit(10).forEach(System.out::println);
		
		// 4.2生成
		Stream.generate(() -> Math.random());
	}
}
